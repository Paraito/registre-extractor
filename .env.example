# ============================================
# SUPABASE CONFIGURATION
# ============================================
# Multi-environment support: Configure separate Supabase instances for each environment
# Get these values from your Supabase project settings: https://app.supabase.com/project/_/settings/api

# Production Supabase Configuration
PROD_SUPABASE_URL=https://your-prod-project.supabase.co
PROD_SUPABASE_ANON_KEY=your-prod-anon-key-here
PROD_SUPABASE_SERVICE_KEY=your-prod-service-role-key-here

# Staging Supabase Configuration (optional)
STAGING_SUPABASE_URL=https://your-staging-project.supabase.co
STAGING_SUPABASE_ANON_KEY=your-staging-anon-key-here
STAGING_SUPABASE_SERVICE_KEY=your-staging-service-role-key-here

# Development Supabase Configuration (optional)
DEV_SUPABASE_URL=https://your-dev-project.supabase.co
DEV_SUPABASE_ANON_KEY=your-dev-anon-key-here
DEV_SUPABASE_SERVICE_KEY=your-dev-service-role-key-here


# ============================================
# API CONFIGURATION
# ============================================
API_PORT=3000                   # Port for the API server
API_HOST=0.0.0.0                # Host binding (0.0.0.0 = all interfaces)

# ============================================
# REDIS CONFIGURATION
# ============================================
# Redis is used for Bull queue system (job queue for extraction workers)
REDIS_HOST=localhost            # Redis server hostname
REDIS_PORT=6379                 # Redis server port
REDIS_PASSWORD=                 # Redis password (leave empty if no auth)
REDIS_URL=redis://localhost:6379  # Full Redis URL

# ============================================
# WORKER CONFIGURATION
# ============================================
# Extraction workers (for downloading documents from Quebec registry)
WORKER_COUNT=1                  # Number of extraction workers to run
WORKER_CONCURRENCY=20           # Max concurrent jobs per worker
EXTRACTION_TIMEOUT=180000       # Extraction timeout in ms (180000 = 3 minutes)
SESSION_TIMEOUT=240000          # Session timeout in ms (240000 = 4 minutes)

# ============================================
# LOGGING
# ============================================
LOG_LEVEL=info                  # Options: error, warn, info, debug

# ============================================
# QUEBEC REGISTRY CONFIGURATION
# ============================================
REGISTRY_BASE_URL=https://www.registrefoncier.gouv.qc.ca/Sirf/

# ============================================
# REQ & RDPRM CONFIGURATION
# ============================================
# BrowserBase Configuration (for REQ scraping)
# Get your credentials from: https://www.browserbase.com/
BROWSERBASE_API_KEY=your-browserbase-api-key-here
BROWSERBASE_PROJECT_ID=your-browserbase-project-id-here

# RDPRM Credentials (for RDPRM scraping)
# These are your RDPRM account credentials
RDPRM_USER=your-rdprm-username
RDPRM_PASS=your-rdprm-password
RDPRM_SEC=RDPRM                 # Security question answer (usually "RDPRM")

# Download Directory (for REQ/RDPRM temporary files)
DOWNLOADS_DIR=/tmp/registre-downloads

# Debug Mode (optional)
DEBUG_PLAYWRIGHT=false          # Set to true for debug screenshots during scraping

# ============================================
# ENVIRONMENT
# ============================================
NODE_ENV=production             # Options: development, production, test

# ============================================
# BROWSER CONFIGURATION
# ============================================
HEADLESS=true                   # Run browser in headless mode (true for servers)


# ============================================
# AI SERVICES CONFIGURATION
# ============================================

# AgentQL Configuration (for AI-powered web scraping)
# Get your API key from: https://www.agentql.com/
AGENTQL_API_KEY=your-agentql-api-key-here
USE_AI_EXTRACTOR=true           # Enable AI-powered extraction (recommended)

# OpenAI Configuration (for vision fallback and AI analysis)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# Google Gemini Configuration (for OCR processing)
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here


# ============================================
# OCR WORKER CONFIGURATION
# ============================================
# OCR workers process documents from extraction_queue with status_id=3 (COMPLETE)
# using Google Gemini's File API for optical character recognition

# Environment Control (enable OCR for specific environments)
OCR_DEV=true                    # Enable OCR for dev environment
OCR_STAGING=false               # Enable OCR for staging environment
OCR_PROD=false                  # Enable OCR for production environment

# Worker Configuration
OCR_WORKER_COUNT=2              # Number of OCR workers to run (default: 2)
OCR_WORKER_ID=                  # Optional worker ID prefix (auto-generated if empty)

# Model Configuration
OCR_EXTRACT_MODEL_GEMINI=gemini-2.0-flash-exp  # Gemini model for OCR (default: gemini-2.0-flash-exp)
OCR_EXTRACT_TEMPERATURE=0.0     # Temperature for extraction (0.0 = deterministic, default: 0.0)

# Processing Configuration
OCR_TEMP_DIR=/tmp/ocr-processing  # Temporary directory for file downloads (default: /tmp/ocr-processing)
OCR_POLL_INTERVAL_MS=10000      # Job polling interval in milliseconds (default: 10000 = 10s)