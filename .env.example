# ============================================
# SUPABASE CONFIGURATION
# ============================================
# Multi-environment support: Configure separate Supabase instances for each environment
# Get these values from your Supabase project settings: https://app.supabase.com/project/_/settings/api

# Production Supabase Configuration
PROD_SUPABASE_URL=https://your-prod-project.supabase.co
PROD_SUPABASE_ANON_KEY=your-prod-anon-key-here
PROD_SUPABASE_SERVICE_KEY=your-prod-service-role-key-here

# Staging Supabase Configuration (optional)
STAGING_SUPABASE_URL=https://your-staging-project.supabase.co
STAGING_SUPABASE_ANON_KEY=your-staging-anon-key-here
STAGING_SUPABASE_SERVICE_KEY=your-staging-service-role-key-here

# Development Supabase Configuration (optional)
DEV_SUPABASE_URL=https://your-dev-project.supabase.co
DEV_SUPABASE_ANON_KEY=your-dev-anon-key-here
DEV_SUPABASE_SERVICE_KEY=your-dev-service-role-key-here


# ============================================
# API CONFIGURATION
# ============================================
API_PORT=3000                   # Port for the API server
API_HOST=0.0.0.0                # Host binding (0.0.0.0 = all interfaces)

# ============================================
# REDIS CONFIGURATION
# ============================================
# Redis is used for:
# 1. Bull queue system (job queue for extraction workers)
# 2. Shared rate limiting across ALL workers (Index OCR + Acte OCR)
# 3. Server capacity management (CPU/RAM allocation tracking)
#
# CRITICAL: Both Index OCR and Acte OCR workers share the SAME Gemini API rate limits.
# Redis coordinates API usage AND server resources across all workers.
# See SHARED_RATE_LIMITING_STRATEGY.md and SERVER_CAPACITY_MANAGEMENT.md for details.
REDIS_HOST=localhost            # Redis server hostname
REDIS_PORT=6379                 # Redis server port
REDIS_PASSWORD=                 # Redis password (leave empty if no auth)
REDIS_URL=redis://localhost:6379  # Full Redis URL (used by workers for coordination)

# ============================================
# WORKER CONFIGURATION
# ============================================
# Extraction workers (for downloading documents from Quebec registry)
# These are HEAVY workers (3 vCPUs, 1 GB RAM each) - run full browser instances
WORKER_COUNT=1                  # Number of extraction workers to run
WORKER_CONCURRENCY=20           # Max concurrent jobs per worker
EXTRACTION_TIMEOUT=180000       # Extraction timeout in ms (180000 = 3 minutes)
SESSION_TIMEOUT=240000          # Session timeout in ms (240000 = 4 minutes)

# IMPORTANT: Total workers across ALL systems must respect TWO limits:
# 1. Gemini API rate limits (see SHARED_RATE_LIMITING_STRATEGY.md)
# 2. Server capacity limits (see SERVER_CAPACITY_MANAGEMENT.md)
#
# Recommended configurations by server size (using unified OCR pool):
# - Small (4 vCPU, 8 GB): 1 registre + 0 OCR pool (registre only)
# - Medium (8 vCPU, 16 GB): 1 registre + 2 OCR pool ← YOUR DEV SERVER
# - Large (16 vCPU, 32 GB): 2 registre + 5 OCR pool
# - XL (32 vCPU, 64 GB): 4 registre + 12 OCR pool

# ============================================
# SERVER CAPACITY CONFIGURATION
# ============================================
# Configure server resource limits to prevent overload
# Workers will check capacity before starting and wait if server is full

# YOUR DEV SERVER SPECS: 8 vCPUs, 16 GB RAM, 80 GB SSD
SERVER_MAX_CPU=8                # Total vCPUs available on server
SERVER_MAX_RAM=16               # Total RAM in GB available on server
SERVER_RESERVE_CPU_PERCENT=20   # Reserve % of CPU for OS/system (recommended: 20)
SERVER_RESERVE_RAM_PERCENT=20   # Reserve % of RAM for OS/system (recommended: 20)

# Resource requirements per worker type (auto-calculated, for reference):
# - Registre Extractor: 3 vCPUs, 1 GB RAM (HEAVY - runs browser)
# - Index OCR: 1.5 vCPUs, 0.75 GB RAM (MODERATE - image processing)
# - Acte OCR: 1 vCPU, 0.5 GB RAM (LIGHT - API calls only)

# YOUR SERVER CALCULATION (8 vCPU, 16 GB):
# - Available: 6.4 vCPUs (8 × 80%), 12.8 GB (16 × 80%)
# - RECOMMENDED: WORKER_COUNT=1, OCR_WORKER_POOL_SIZE=2
#   - 1 registre worker: 3 vCPUs, 1 GB
#   - 2 OCR workers: ~2.5 vCPUs, ~1.25 GB (dynamic mix)
#   - Total: 5.5 vCPUs, 2.25 GB ✅ Fits comfortably (86% CPU, 18% RAM)
# - MAXIMUM: WORKER_COUNT=1, OCR_WORKER_POOL_SIZE=3 (tight on CPU)
#   - Total: ~6.75 vCPUs, ~2.9 GB (may work, OCR is dynamic)

# ============================================
# LOGGING
# ============================================
LOG_LEVEL=info                  # Options: error, warn, info, debug

# ============================================
# QUEBEC REGISTRY CONFIGURATION
# ============================================
REGISTRY_BASE_URL=https://www.registrefoncier.gouv.qc.ca/Sirf/

# ============================================
# ENVIRONMENT
# ============================================
NODE_ENV=production             # Options: development, production, test

# ============================================
# BROWSER CONFIGURATION
# ============================================
HEADLESS=true                   # Run browser in headless mode (true for servers)


# ============================================
# AI SERVICES CONFIGURATION
# ============================================

# AgentQL Configuration (for AI-powered web scraping)
# Get your API key from: https://www.agentql.com/
AGENTQL_API_KEY=your-agentql-api-key-here
USE_AI_EXTRACTOR=true           # Enable AI-powered extraction (recommended)

# OpenAI Configuration (for vision fallback and AI analysis)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# Gemini AI Configuration (for OCR processing)
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# Claude/Anthropic AI Configuration (for OCR boost and verification)
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your-anthropic-api-key-here


# ============================================
# UNIFIED OCR WORKER POOL CONFIGURATION
# ============================================
# Single pool of workers that dynamically handle BOTH index and acte OCR
# Workers automatically rebalance based on queue composition
# See UNIFIED_OCR_WORKER_POOL.md for details

OCR_WORKER_POOL_SIZE=2          # Total OCR workers (RECOMMENDED: 2 for your 8 vCPU server)
OCR_MIN_INDEX_WORKERS=1         # Minimum index workers (always keep at least 1)
OCR_MIN_ACTE_WORKERS=1          # Minimum acte workers (always keep at least 1)
OCR_REBALANCE_INTERVAL_MS=30000 # How often to rebalance workers (30 seconds)

# How it works:
# - If queue is 80% index, 20% acte → Pool allocates ~2 index, ~0 acte workers (min 1 enforced)
# - If queue is 20% index, 80% acte → Pool allocates ~0 index, ~2 acte workers (min 1 enforced)
# - If queue is empty → 50/50 split (1 index, 1 acte worker)
# - Workers can switch modes when idle to maximize efficiency

# OCR Environment Control
# Set to 'false' to disable OCR processing for specific environments
OCR_PROD=false                  # Enable OCR for production environment
OCR_STAGING=false               # Enable OCR for staging environment
OCR_DEV=true                    # Enable OCR for development environment

# OCR Model Configuration (for Index documents)
OCR_EXTRACT_MODEL=gemini-2.5-pro        # Model for initial OCR extraction
OCR_BOOST_MODEL=gemini-2.5-pro                # Model for boosting/enhancing OCR results
OCR_EXTRACT_TEMPERATURE=0.1                   # Temperature for extraction (0.0-1.0, lower = more deterministic)
OCR_BOOST_TEMPERATURE=0.2                     # Temperature for boosting (0.0-1.0)
OCR_TEMP_DIR=/tmp/ocr-processing              # Temporary directory for OCR processing

# Acte OCR Configuration (for Acte/legal documents - uses Gemini File API)
ACTE_OCR_EXTRACT_MODEL=gemini-2.5-flash   # Model for Acte OCR extraction
ACTE_OCR_BOOST_MODEL=gemini-2.5-pro           # Model for Acte OCR boosting
ACTE_OCR_EXTRACT_TEMPERATURE=0.1              # Temperature for Acte extraction
ACTE_OCR_BOOST_TEMPERATURE=0.2                # Temperature for Acte boosting


# ============================================
# INDEX OCR SPECIALIST CONFIGURATION
# ============================================
# Configuration for the new parallel-optimized index OCR specialist

# Qwen3-VL Configuration (optional - for alternative OCR model)
# Local Qwen3-VL server configuration
QWEN_API_URL=http://localhost:8000/v1        # Qwen3-VL API endpoint
QWEN_MODEL_NAME=qwen3-vl                     # Model name
QWEN_API_KEY=                                # Optional API key for Qwen server
QWEN_PORT=3002                               # Port for Qwen server

# Pipeline Configuration
MAX_LINES_PER_PAGE=60                        # Maximum lines to extract per page
EXTRACT_WINDOW=15                            # Window size for windowed extraction
UPSCALE_FACTOR=2.0                           # Image upscaling factor (1.0-4.0)
VIEWPORT_SCALE=4.0                           # Viewport scale for PDF rendering

# Timeouts & Retries
REQUEST_TIMEOUT_MS=300000                    # Request timeout in ms (5 minutes)
MAX_RETRIES=3                                # Maximum retry attempts
DELAY_BETWEEN_REQUESTS=2000                  # Delay between requests in ms

# Directories (relative to index_ocr_specialist/)
ARTIFACTS_DIR=./artifacts                    # Directory for pipeline artifacts
LOGS_DIR=./logs                              # Directory for logs
REPORTS_DIR=./reports                        # Directory for reports
TEMP_DIR=./tmp                               # Temporary directory

# Server Ports
PORT=3001                                    # Main server port (fallback for GEMINI_PORT)
GEMINI_PORT=3001                             # Gemini server port

# Test Configuration
TEST_PDF_URL=https://your-test-pdf-url.pdf   # URL of test PDF for E2E tests